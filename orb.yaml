version: 2.1
description: |
  Easily deploy to nais.io platform. See https://github.com/navikt/circleci-nais-orb.
orbs:
  docker: circleci/docker@0.5.1
executors:
  go-executor:
    docker:
      - image: navikt/deployment-cli:v0.2.0
commands:
  docker-deploy:
    description: "Build and push docker image"
    parameters:
      image:
        type: string
      folder:
        type: string
        default: "."
      registry:
        type: string
        default: "docker.io"
    steps:
      - setup_remote_docker
      - docker/check:
          registry: << parameters.registry >>
      - docker/build:
          dockerfile: << parameters.folder >>/Dockerfile
          path: << parameters.folder >>
          image: << parameters.image >>
          registry: << parameters.registry >>
      - docker/push:
          image: << parameters.image >>
          registry: << parameters.registry >>
  decrypt-private-key:
    description: "Decrypt private key"
    steps:
      - run:
          name: "Decrypt private key"
          command: |
            openssl aes-256-cbc -K $OPENSSL_KEY -iv $OPENSSL_IV -in .circleci/github.key.pem.enc -out .circleci/github.key.pem -d
  login-to-github:
    description: "Login to Github"
    parameters:
      github-app-id:
        type: integer
    steps:
      - decrypt-private-key
      - run:
          command: |
            git clone https://github.com/navikt/github-apps-support.git
            export PATH=`pwd`/github-apps-support/bin:$PATH
            GH_TOKEN=$(generate-installation-token.sh `generate-jwt.sh .circleci/github.key.pem << parameters.github-app-id >>`)
            echo "export GH_TOKEN=$GH_TOKEN" >> $BASH_ENV
            source $BASH_ENV
            echo -e "machine api.github.com login x-access-token password $GH_TOKEN" >> ~/.netrc
            rm .circleci/github.key.pem
  generate-nais-deployment:
    description: "Generate NAIS Github deployment"
    parameters:
      nais-template:
        type: string
      enable-vars:
        type: boolean
        default: false
      template-vars:
        type: string
        default: "/tmp/vars.json"
      github-app-id:
        type: integer
      image:
        type: string
      environment:
        type: string
      repo:
        type: string
      team:
        type: string
      await:
        type: integer
        default: 300
    steps:
      - decrypt-private-key
      - unless:
          condition: << parameters.enable-vars >>
          steps:
            - run: echo "{}" > << parameters.template-vars >>
      - run:
          name: "Create NAIS Github deployment"
          command: |
            deployment-cli deploy create --cluster=<< parameters.environment >> --repository=<< parameters.repo >> --appid=<< parameters.github-app-id >> \
              --team=<< parameters.team >> --var version=<< parameters.image >>:$CIRCLE_SHA1 --key=.circleci/github.key.pem --resource=<< parameters.nais-template >> --await=<< parameters.await >> --vars=<< parameters.template-vars >>
            rm .circleci/github.key.pem
jobs:
  deploy:
    executor: go-executor
    parameters:
      build-and-push-docker-image:
        type: boolean
        default: true
        description: Build and push docker image to Docker hub?
      repo:
        type: string
      image:
        type: string
      docker-folder:
        type: string
        default: "."
      github-app-id:
        type: integer
      nais-template:
        type: string
      enable-vars:
        type: boolean
        default: false
      template-vars:
        type: string
        default: "/tmp/vars.json"
      team:
        type: string
      await:
        type: integer
        default: 300
      environment:
        type: string
      registry:
        type: string
        default: "docker.io"
    steps:
      - checkout
      - when:
          condition: << parameters.build-and-push-docker-image >>
          steps:
            - docker-deploy:
                image: << parameters.image >>
                folder: << parameters.docker-folder >>
                registry: << parameters.registry >>
      - generate-nais-deployment:
          repo: << parameters.repo >>
          nais-template: << parameters.nais-template >>
          team: << parameters.team >>
          github-app-id: << parameters.github-app-id >>
          image: << parameters.image >>
          environment: << parameters.environment >>
          await: << parameters.await >>
examples:
  deploy-docker-and-nais:
    description: Build and push docker image and create NAIS deployment
    usage:
      version: 2.1
      orbs:
        nais: navikt/nais-deployment:XYZ
      workflow:
        deploy-docker-and-nais:
          jobs:
            - nais/deploy:
                repo: navikt/example-repo
                image: navikt/example-image
                github-app-id: 1337
                nais-template: nais.yaml
                environment: dev-fss
                team: awesome-team
  deploy-nais-only:
    description: Create NAIS deployment without creating and pushind docker image
    usage:
      version: 2.1
      orbs:
        nais: navikt/nais-deployment:XYZ
      workflow:
        deploy-docker-and-nais:
          jobs:
            - nais/deploy:
                build-and-push-docker-image: false
                repo: navikt/example-repo
                image: navikt/example-image
                github-app-id: 1337
                nais-template: nais.yaml
                environment: dev-fss
                team: awesome-team
  push-docker-image-only:
    description: Create and push docker image without creating NAIS deployment
    usage:
      version: 2.1
      orbs:
        nais: navikt/nais-deployment:XYZ
      jobs:
        build:
          docker:
            - image: circleci/openjdk:8-jdk
          steps:
            - checkout
            - run: some-custom-command?
            - nais/docker-deploy:
                image: navikt/example-image
      workflow:
        build-and-push-docker:
          jobs:
            - build
  deploy-nais-only-with-vars:
    description: Create NAIS deployment templated with vars from vars.json
    usage:
      version: 2.1
      orbs:
        nais: navikt/nais-deployment:XYZ
      workflow:
        deploy-docker-and-nais:
          jobs:
            - nais/deploy:
                build-and-push-docker-image: false
                repo: navikt/example-repo
                image: navikt/example-image
                github-app-id: 1337
                nais-template: nais.yaml
                environment: dev-fss
                team: awesome-team
                enable-vars: true
                template-vars: vars.json

